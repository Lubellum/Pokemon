・現在ある処理
enum　　　　　　　　　　　　　→　コマンドを番号として列挙
tAction input_action()　　　　→　コマンド入力を受け付ける関数(1P)
tAction random_action()	　　　→　コマンドをランダムに生成する関数(2P)
tAction selectaction1(),2()　 →　ポケモン毎のアクションを決める関数
void execution　　　　　　　　→　入力されたコマンドを基にバトルの処理を行う関数




・今の処理の流れ

ポケモンのインスタンスを生成
　↓
コマンドの選択
(1P側はコマンドを受け付ける、2Pはランダムに生成)
　↓
コマンドによって行動を変化させる




・想定するゲームの流れ(フローチャートで処理の流れを可視化)

①ポケモンのインスタンスを生成
CPikachu pikachu;
　↓
②コマンドの選択
(1P側はコマンドを受け付ける、2Pはランダムに生成)
tAction selectaction1()　→　tAction input_action()
tAction selectaction2()　→　tAction random_action()
　↓
③コマンドによって行動を変化させる
void execution
引数は、CMonster1,2 tAction command1,2 
　↓
④もしどちらかのHPが0以下にならなければ、HPが0になるまでコマンド選択～の行動を変化させる部分をループさせる
どちらかのHPが0以下でなければ②に戻る
ループ
　↓
⑤決着
ループの終了　→　(勝利判定、ゲーム終了表示)



・ゲームループに入れる処理
tAction selectaction1()
tAction selectaction2()
void execution()







# モンスターが倒れた時に、次のモンスターを選択する。

選択されたモンスターのfaintflagがtrue(倒れている)なら、選出不可　→　選択しなおし
faintflagがtrueでないなら(倒れていない)なら、選出可　→　選出して、バトル続行